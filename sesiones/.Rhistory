print.xtableFtable(xftbl3d,floating.environment =NULL)
library(xtable)
xftbl3d <- xtableFtable(tbl3d,caption = 'test')
print.xtableFtable(xftbl3d,floating.environment =NULL)
print.xtableFtable(xftbl3d,floating.environment =NA)
print.xtableFtable(xftbl3d,floating.environment =NA, tabular.environment=NA)
print.xtableFtable(xftbl3d,floating.environment =NULL, tabular.environment=NULL)
print.xtableFtable(xftbl3d,floating.environment =NULL, tabular.environment=NULL,print.results=F)
levels(datatry$countSw)
table(datatry$countSw)
levs=c('Never', '1', '2', '3 or more')
datatry$countSw
datatry=read.csv('https://raw.githubusercontent.com/projectsUW/LegislativeResearchPeru/master/attributes/CountTryRE.csv?token=AQEW1qTHskyGBV5YeeDNyX35WoFkCt2Wks5ZLGiuwA%3D%3D',colClasses=c("dni"="character"))
levs=c('Never', '1', '2', '3 or more')
datatry$countSw=factor(datatry$countSw,levels=levs,ordered = T)
datatry$countSw
table(datatry$countSw)
datatry=read.csv('https://raw.githubusercontent.com/projectsUW/LegislativeResearchPeru/master/attributes/CountTryRE.csv?token=AQEW1qTHskyGBV5YeeDNyX35WoFkCt2Wks5ZLGiuwA%3D%3D',colClasses=c("dni"="character"))
table(datatry$countSw)
labs=c('Never', '1', '2', '3 or more')
datatry$countSw=factor(datatry$countSw,labels=labs,ordered = T)
table(datatry$countSw)
levels(datatry$countSw)
datatry=datatry[complete.cases(datatry$RE),]
g <- ggplot(datatry, aes(as.factor(period)))
# Number of cars in each class:
g + geom_bar(aes(fill = as.factor(RE)),position = 'dodge')+facet_wrap(~countSw,ncol=2,drop=F,scales = "free_y")+ scale_fill_manual(values = c("black", "grey"),name='Will\nswitch\nnext year?',labels=c("NO", "YES"))+ labs(x = "Congress year",title='Switching legislators\ndo not clearly represent the least voted ones',y='Votes obtained in the Elections')
g + geom_bar(aes(fill = as.factor(RE)),position = 'dodge')+facet_wrap(~countSw,ncol=2,drop=F,scales = "free_y")+ scale_fill_manual(values = c("grey", "black"),name='Relected?',labels=c("YES", "NO"))+ labs(x = "Congress year",title='Count of legislators')
table(datatry$countSw, datatry$RE)
g + geom_bar(aes(fill = as.factor(RE)),position = 'dodge')+facet_wrap(~countSw,ncol=2,drop=F,scales = "free_y")+ scale_fill_manual(values = c("grey", "black"),name='Relected?',labels=c("NO", "YES"))+ labs(x = "Congress year",y='Count of legislators',title='The legislator that switched more than')
g + geom_bar(aes(fill = as.factor(RE)),position = 'dodge')+facet_wrap(~countSw,ncol=2,drop=F,scales = "free_y")+ scale_fill_manual(values = c("grey", "black"),name='Relected?',labels=c("NO", "YES"))+ labs(x = "Congress year",y='Count of legislators',title='The legislator that switched more than once were not reelected')
g + geom_bar(aes(fill = as.factor(RE)),position = 'dodge')+facet_wrap(~countSw,ncol=2,drop=F,scales = "free_y")+ scale_fill_manual(values = c("grey", "black"),name='Relected?',labels=c("NO", "YES"))+ labs(x = "Congress year",y='Count of legislators',title='The legislator that switched more than once\nwere not reelected')
g + geom_bar(aes(fill = as.factor(RE)),position = 'dodge')+facet_wrap(~countSw,ncol=2,drop=F,scales = "free_y")+ scale_fill_manual(values = c("grey", "black"),name='Relected?',labels=c("NO", "YES"))+ labs(x = "Congress year",y='Count of legislators',title='The legislators that switched more than once\nwere not reelected', subtitle='ioiu')
?labs
g + geom_bar(aes(fill = as.factor(RE)),position = 'dodge')+facet_wrap(~countSw,ncol=2,drop=F,scales = "free_y")+ scale_fill_manual(values = c("grey", "black"),name='Relected?',labels=c("NO", "YES"))+ labs(x = "Congress",y='Count of legislators',title='Legislators who switched more than once were not reelected', subtitle='ttt')
install.packages("ggplot2")
install.packages("ggplot2")
install.packages("ggplot2")
install.packages("ggplot2")
h <- ggplot(datatry, aes(as.factor(period)))
library(ggplot)
library(ggplot2)
knitr::opts_chunk$set(echo = TRUE)
library(GERGM)
set.seed(12345)
data("lending_2005")
data("covariate_data_2005")
data("net_exports_2005")
plot_network(lending_2005)
library(GERGM)
set.seed(12345)
data("lending_2005")
data("covariate_data_2005")
data("net_exports_2005")
plot_network(lending_2005)
head(covariate_data_2005)
formula <- lending_2005 ~ edges + mutual(alpha = 0.8) + sender("log_GDP") +
receiver("log_GDP") + nodemix("G8", base = "No") + netcov(net_exports_2005)
test <- gergm(formula,
covariate_data = covariate_data_2005,
number_of_networks_to_simulate = 40000,
thin = 1/100,
proposal_variance = 0.05,
MCMC_burnin = 10000,
seed = 456,
convergence_tolerance = 0.5)
library(GERGM)
set.seed(12345)
data("lending_2005")
data("covariate_data_2005")
data("net_exports_2005")
plot_network(lending_2005)
summary(test)
test@theta.coef
test@lambda.coef
install.packages("maptools")
install.packages("rgeos")
install.packages("tmap")
install.packages("maps")
install.packages("GISTools")
install.packages("plotrix")
library(reshape2)
library(reshape2)
library(ggplot2) #suppressPackageStartupMessages()
library(maptools)
library(tmap)
shp <- readShapeSpatial("maps/maps-integrados.shp")
peruframe <- readShapeSpatial("maps/borderPeru.shp")
regs=readShapeSpatial("maps/DEPARTAMENTAL/regionpresi061014.shp")
pbi=read.csv("depasRpbi.csv")
regs@data=merge(regs@data,pbi,by.x="NOM_DPTO_x", by.y="NOMBDEP",all.x=T)
distrips=readShapeSpatial("maps/pointsIntegradomun0610.shp")
amaz=readShapeSpatial("maps/ccpp_indigena_amazonico.shp")
sie1=readShapeSpatial("maps/ccpp_quechua.shp")
sie2=readShapeSpatial("maps/CC_jaqaru.shp")
sie3=readShapeSpatial("maps/CC_aimara.shp")
library(png)
tol <- readPNG("images/toledo.png")
fuji <- readPNG("images/fuji.png")
alan <- readPNG("images/alan.png")
olla <- readPNG("images/ollanta.png")
kei <- readPNG("images/keiko.png")
up <- readPNG("images/up.png")
down <- readPNG("images/down.png")
left<-shp[!is.na(shp@data$Gnd01) & !is.na(shp@data$Gnd06) & !is.na(shp@data$Gnd11) & shp@data$Gnd11 == "GAP" & shp@data$Gnd06 == "UPP" & shp@data$Gnd01 == "TOL",]
#names(left@data[,c(5,4,3,24)])
#write.csv(left@data[,c(5,4,3,24)],"prochange.csv")
right<-shp[!is.na(shp@data$Gnd01) & !is.na(shp@data$Gnd06) & !is.na(shp@data$Gnd11) & shp@data$Gnd11 != "GAP" & shp@data$Gnd06 != "UPP" & shp@data$Gnd01 != "TOL",]
#names(right@data[,c(5,4,3,24)])
#write.csv(right@data[,c(5,4,3,24)],"norisk.csv")
bigs=nrow(shp[!is.na(shp@data$pop2007)&shp@data$pop2007>100000,])
tol01 <-shp[!is.na(shp@data$Gnd01) & shp@data$Gnd01 == "TOL",]
alan01 <-shp[!is.na(shp@data$Gnd01) & shp@data$Gnd01 == "PAP",]
olla06 <-shp[!is.na(shp@data$Gnd06) & shp@data$Gnd06 == "UPP",]
alan06 <-shp[!is.na(shp@data$Gnd06) & shp@data$Gnd06 == "PAP",]
olla11 <-shp[!is.na(shp@data$Gnd11) & shp@data$Gnd11 == "GAP",]
kei11 <-shp[!is.na(shp@data$Gnd11) & shp@data$Gnd11 == "KEI",]
#2001 80%
tol01s <-shp[!is.na(shp@data$Gnd01) & shp@data$Gnd01 == "TOL" & shp@data$NEP01 == 1,]
alan01s <-shp[!is.na(shp@data$Gnd01) & shp@data$Gnd01 == "PAP" & shp@data$NEP01 == 1,]
#2006 80%
olla06s <-shp[!is.na(shp@data$Gnd06) & shp@data$Gnd06 == "UPP" & shp@data$NEP06 == 1,]
alan06s <-shp[!is.na(shp@data$Gnd06) & shp@data$Gnd06 == "PAP" & shp@data$NEP06 == 1,]
#2011 80%
olla11s <-shp[!is.na(shp@data$Gnd11) & shp@data$Gnd11 == "GAP" & shp@data$NEP11 == 1,]
kei11s <-shp[!is.na(shp@data$Gnd11) & !is.na(shp@data$NEP11)& shp@data$Gnd11 == "KEI" & shp@data$NEP11 == 1,]
#BigCity?
bigtol1=nrow(tol01[tol01@data$pop2007>100000,])
bigtol1s=ifelse (any(tol01s@data$pop2007>100000),nrow(tol01s[tol01s@data$pop2007>100000,]@data),0)
bigalan01=nrow(alan01[alan01@data$pop2007>100000,])
bigalan01s=ifelse (any(alan01s@data$pop2007>100000),nrow(alan01s[alan01s@data$pop2007>100000,]@data),0)
bigalan06=nrow(alan06[alan06@data$pop2007>100000,])
bigalan06s=ifelse (any(alan06s@data$pop2007>100000),nrow(alan06s[alan06s@data$pop2007>100000,]@data),0)
bigolla6=nrow(olla06[olla06@data$pop2007>100000,])
bigolla6s=ifelse (any(olla06s@data$pop2007>100000),nrow(olla06s[olla06s@data$pop2007>100000,]@data),0)
bigolla11=nrow(olla11[!is.na(olla11@data$pop2007) & olla11@data$pop2007>100000,])
bigolla11s=ifelse (any(olla11s@data$pop2007>100000),nrow(olla11s[!is.na(olla11s@data$pop2007) & olla11s@data$pop2007>100000,]@data),0)
bigkei11=nrow(kei11[!is.na(kei11@data$pop2007) & kei11@data$pop2007>100000,])
bigkei11s=ifelse (any(kei11s@data$pop2007>100000),nrow(kei11s[!is.na(kei11s@data$pop2007) & kei11s@data$pop2007>100000,]@data),0)
c1u=-79
c2u=-1.1
c1d=-71
c2d=-7.5
c1i=-81.5
c2i=-9.4
c1ib=-78.5
c2ib=-14
col4=c("plum2","blue","chocolate1","steelblue1")
col5=c("plum2","blue","red","chocolate1","steelblue1")
# Las elecciones volvieron al Perú en 1980, luego del Gobierno Militar instaurado en 1968. En 1980, gana Fernando Belaunde (Acción Popular); en 1985, gana Alan García (APRA); y en 1990, gana Alberto Fujimori (Cambio 90), quien cerró el Congreso en 1992, promulgó una nueva Constitución en 1993, bajo la cual se elegiría en 1995 y re elegiría en el año 2000. Es innegable que Fujimori supo administrar el apoyo popular, pues mantuvo su popularidad alta en los diez años que estuvo de Presidente. Se puede asumir que el golpe anímico a su masa popular debió haber sido muy duro, al revelarse todo el entramado de chantaje, corrupción y abuso de poder que salió al aire luego del 2000, lo que no sólo le hariá renunciar, si no que también alteraría lo que el ciudadano debería buscar para sus nuevos líderes.
#"AUN" "FIM" "PAP" "PRA" "TOL"
levels(shp@data$Gnd01) = c("LOURDES", "OTROS","ALAN" ,"OTROS","TOLEDO")
#"AUN"  "FDC"  "FUJI" "PAP"  "PJN"  "R"    "UPP"
levels(shp@data$Gnd06)= c("LOURDES", "OTROS","M CHAVEZ","ALAN", "OTROS","OTROS","OLLANTA")
#"AGC" "GAP" "KEI" "SOL" "TOL"
levels(shp@data$Gnd11)=c("PPK", "OLLANTA","KEIKO", "OTROS", "TOLEDO")
###
Fuji00 <-shp[!is.na(shp@data$Gnd00) & shp@data$Gnd00 == "FUJI" ,]
Fuji00x <-shp[!is.na(shp@data$NEP00) & shp@data$NEP00 == 1,]
Fuji00b <-distrips[!is.na(distrips@data$Gnd00) & distrips@data$Gnd00 == "FUJI" & distrips@data$pop2007 >= 100000 ,]
library(reshape2)
library(reshape2)
library(ggplot2) #suppressPackageStartupMessages()
library(maptools)
library(tmap)
shp <- readShapeSpatial("maps/maps-integrados.shp")
peruframe <- readShapeSpatial("maps/borderPeru.shp")
regs=readShapeSpatial("maps/DEPARTAMENTAL/regionpresi061014.shp")
pbi=read.csv("depasRpbi.csv")
regs@data=merge(regs@data,pbi,by.x="NOM_DPTO_x", by.y="NOMBDEP",all.x=T)
distrips=readShapeSpatial("maps/pointsIntegradomun0610.shp")
amaz=readShapeSpatial("maps/ccpp_indigena_amazonico.shp")
sie1=readShapeSpatial("maps/ccpp_quechua.shp")
sie1=readShapeSpatial("maps/ccpp_quechua.shp")
sie2=readShapeSpatial("maps/CC_jaqaru.shp")
sie2=readShapeSpatial("maps/CC_jaqaru.shp")
sie3=readShapeSpatial("maps/CC_aimara.shp")
tol <- readPNG("images/toledo.png")
fuji <- readPNG("images/fuji.png")
alan <- readPNG("images/alan.png")
olla <- readPNG("images/ollanta.png")
kei <- readPNG("images/keiko.png")
up <- readPNG("images/up.png")
down <- readPNG("images/down.png")
left<-shp[!is.na(shp@data$Gnd01) & !is.na(shp@data$Gnd06) & !is.na(shp@data$Gnd11) & shp@data$Gnd11 == "GAP" & shp@data$Gnd06 == "UPP" & shp@data$Gnd01 == "TOL",]
right<-shp[!is.na(shp@data$Gnd01) & !is.na(shp@data$Gnd06) & !is.na(shp@data$Gnd11) & shp@data$Gnd11 != "GAP" & shp@data$Gnd06 != "UPP" & shp@data$Gnd01 != "TOL",]
bigs=nrow(shp[!is.na(shp@data$pop2007)&shp@data$pop2007>100000,])
tol01 <-shp[!is.na(shp@data$Gnd01) & shp@data$Gnd01 == "TOL",]
alan01 <-shp[!is.na(shp@data$Gnd01) & shp@data$Gnd01 == "PAP",]
olla06 <-shp[!is.na(shp@data$Gnd06) & shp@data$Gnd06 == "UPP",]
alan06 <-shp[!is.na(shp@data$Gnd06) & shp@data$Gnd06 == "PAP",]
olla11 <-shp[!is.na(shp@data$Gnd11) & shp@data$Gnd11 == "GAP",]
kei11 <-shp[!is.na(shp@data$Gnd11) & shp@data$Gnd11 == "KEI",]
tol01s <-shp[!is.na(shp@data$Gnd01) & shp@data$Gnd01 == "TOL" & shp@data$NEP01 == 1,]
alan01s <-shp[!is.na(shp@data$Gnd01) & shp@data$Gnd01 == "PAP" & shp@data$NEP01 == 1,]
olla06s <-shp[!is.na(shp@data$Gnd06) & shp@data$Gnd06 == "UPP" & shp@data$NEP06 == 1,]
alan06s <-shp[!is.na(shp@data$Gnd06) & shp@data$Gnd06 == "PAP" & shp@data$NEP06 == 1,]
olla11s <-shp[!is.na(shp@data$Gnd11) & shp@data$Gnd11 == "GAP" & shp@data$NEP11 == 1,]
kei11s <-shp[!is.na(shp@data$Gnd11) & !is.na(shp@data$NEP11)& shp@data$Gnd11 == "KEI" & shp@data$NEP11 == 1,]
bigtol1=nrow(tol01[tol01@data$pop2007>100000,])
bigtol1s=ifelse (any(tol01s@data$pop2007>100000),nrow(tol01s[tol01s@data$pop2007>100000,]@data),0)
bigalan01=nrow(alan01[alan01@data$pop2007>100000,])
bigalan01s=ifelse (any(alan01s@data$pop2007>100000),nrow(alan01s[alan01s@data$pop2007>100000,]@data),0)
bigalan06=nrow(alan06[alan06@data$pop2007>100000,])
bigalan06s=ifelse (any(alan06s@data$pop2007>100000),nrow(alan06s[alan06s@data$pop2007>100000,]@data),0)
bigolla6=nrow(olla06[olla06@data$pop2007>100000,])
bigolla6s=ifelse (any(olla06s@data$pop2007>100000),nrow(olla06s[olla06s@data$pop2007>100000,]@data),0)
bigolla11=nrow(olla11[!is.na(olla11@data$pop2007) & olla11@data$pop2007>100000,])
bigolla11s=ifelse (any(olla11s@data$pop2007>100000),nrow(olla11s[!is.na(olla11s@data$pop2007) & olla11s@data$pop2007>100000,]@data),0)
bigkei11=nrow(kei11[!is.na(kei11@data$pop2007) & kei11@data$pop2007>100000,])
bigkei11s=ifelse (any(kei11s@data$pop2007>100000),nrow(kei11s[!is.na(kei11s@data$pop2007) & kei11s@data$pop2007>100000,]@data),0)
c1u=-79
c2u=-1.1
c1d=-71
c2d=-7.5
c1i=-81.5
c2i=-9.4
c1ib=-78.5
c2ib=-14
col4=c("plum2","blue","chocolate1","steelblue1")
col5=c("plum2","blue","red","chocolate1","steelblue1")
levels(shp@data$Gnd01) = c("LOURDES", "OTROS","ALAN" ,"OTROS","TOLEDO")
levels(shp@data$Gnd06)= c("LOURDES", "OTROS","M CHAVEZ","ALAN", "OTROS","OTROS","OLLANTA")
levels(shp@data$Gnd11)=c("PPK", "OLLANTA","KEIKO", "OTROS", "TOLEDO")
Fuji00 <-shp[!is.na(shp@data$Gnd00) & shp@data$Gnd00 == "FUJI" ,]
Fuji00x <-shp[!is.na(shp@data$NEP00) & shp@data$NEP00 == 1,]
Fuji00b <-distrips[!is.na(distrips@data$Gnd00) & distrips@data$Gnd00 == "FUJI" & distrips@data$pop2007 >= 100000 ,]
install.packages("openxlsx")
install.packages("plotly")
install.packages("scatterD3")
install.packages("dbscan")
install.packages("maps")
# # where am I?
getwd()
folder="data"
fileName="anes_timeseries_2012.sav"
fileToRead=file.path(folder,fileName)
dataSpss=read_sav(fileToRead)
library(foreign)
folder="data"
fileName="anes_timeseries_2012.sav"
fileToRead=file.path(folder,fileName)
dataSpss=read_sav(fileToRead)
library(foreign)
folder="data"
fileName="anes_timeseries_2012.sav"
fileToRead=file.path(folder,fileName)
dataSpss=read.sav(fileToRead)
library(foreign)
folder="data"
fileName="anes_timeseries_2012.sav"
fileToRead=file.path(folder,fileName)
dataSpss=read.spss(fileToRead)
head(dataSpss)
library(haven)
install.packages("haven")
#install 'haven' first! (se toma su tiempo!)
library(haven)
folder="data"
fileName="anes_timeseries_2012.sav"
fileToRead=file.path(folder,fileName)
dataSpss=read_sav(fileToRead)
head(dataSpss)
head(dataSpss[,c(20:25)])
head(dataSpss[,c(20:23)])
head(dataSpss[,c(50:52)])
folder="data"
fileName="anes_timeseries_2012.sav"
fileToRead=file.path(folder,fileName)
link='https://github.com/PoliticayGobiernoPUCP/EstadisticaPoliticaGobiernoII/blob/master/sesiones/data/anes_timeseries_2012.sav?raw=true'
#install 'haven' first! (se toma su tiempo!)
library(haven)
link='https://github.com/PoliticayGobiernoPUCP/EstadisticaPoliticaGobiernoII/blob/master/sesiones/data/anes_timeseries_2012.sav?raw=true'
dataSpss=read_sav(link)
install.packages("curl")
#instalar 'haven' y 'curl' antes! (se toma su tiempo!)
library(haven)
library(curl)
link='https://github.com/PoliticayGobiernoPUCP/EstadisticaPoliticaGobiernoII/blob/master/sesiones/data/anes_timeseries_2012.sav?raw=true'
dataSpss=read_sav(link)
#instalar 'haven' y 'curl' antes! (se toma su tiempo!)
library(haven)
library(curl)
link='https://github.com/PoliticayGobiernoPUCP/EstadisticaPoliticaGobiernoII/blob/master/sesiones/data/anes_timeseries_2012.sav?raw=true'
dataSpss=read_sav(link)
rm(dataSpss)
#instalar 'haven' y 'curl' antes! (se toma su tiempo!)
library(haven)
library(curl)
link='https://s3-us-west-2.amazonaws.com/datapucp/anes_timeseries_2012.sav'
dataSpss=read_sav(link)
#instalar 'haven' y 'curl' antes! (se toma su tiempo!)
library(haven)
library(curl)
link='https://s3-us-west-2.amazonaws.com/datapucp/anes_timeseries_2012.sav'
dataSpss=read_sav(link)
#install 'haven' first! (se toma su tiempo!)
library(haven)
folder="data"
fileName="anes_timeseries_2012.sav"
fileToRead=file.path(folder,fileName)
dataSpss=read_sav(fileToRead)
varsOfInterest=c("libcpre_self","libcpo_self")
dataSpssSub=as.data.frame(dataSpss)[varsOfInterest]
head(dataSpssSub)
fileName="anes_timeseries_2012.dta"
fileToRead=file.path(folder,fileName)
dataStata=read_dta(fileToRead)
dataStataSub=as.data.frame(dataStata)[varsOfInterest]
head(dataStataSub)
?haven
??haven
install.packages("readxl")
library(readxl)
library(readxl)
fileName="pe.Indice de Deasrrollo Humano Perú.xlsx"
fileToRead=file.path(folder,fileName)
dataExcel=read_excel(fileToRead)
fileName="anes_timeseries_2012.dta"
fileToRead=file.path(folder,fileName)
dataStata=read_dta(fileToRead)
dataStataSub=as.data.frame(dataStata)[varsOfInterest]
head(dataStataSub)
library(readxl)
fileName="pe.Indice de Desarrollo Humano Perú.xlsx"
fileToRead=file.path(folder,fileName)
dataExcel=read_excel(fileToRead)
library(readxl)
fileName="http://www.pe.undp.org/content/dam/peru/docs/Publicaciones%20pobreza/INDH2013/pe.Indice%20de%20Densidad%20del%20Estado%20Per%C3%BA.xlsx"
fileToRead=file.path(folder,fileName)
dataExcel=read_excel(fileToRead)
library(readxl)
fileName="http://www.pe.undp.org/content/dam/peru/docs/Publicaciones%20pobreza/INDH2013/pe.Indice%20de%20Densidad%20del%20Estado%20Per%C3%BA.xlsx?download"
fileToRead=file.path(folder,fileName)
dataExcel=read_excel(fileToRead)
library(readxl)
fileName="http://www.pe.undp.org/content/dam/peru/docs/Publicaciones%20pobreza/INDH2013/pe.Indice%20de%20Densidad%20del%20Estado%20Per%C3%BA.xlsx"
fileToRead=file.path(folder,fileName)
dataExcel=read_excel(fileToRead)
library(readxl)
fileName="idePeru.xlsx"
fileToRead=file.path(folder,fileName)
dataExcel=read_excel(fileToRead)
setwd("~/Documents/GITHUBs/PUCP/EstadisticaPoliticaGobiernoII/sesiones")
library(readxl)
fileName="idePeru.xlsx"
fileToRead=file.path(folder,fileName)
dataExcel=read_excel(fileToRead)
head(dataExcel)
library(readxl)
fileName="pe.Indice de Desarrollo Humano Perú.xlsx"
fileToRead=file.path(folder,fileName)
dataExcel=read_excel(fileToRead)
head(dataExcel)
fileName="http://www.pe.undp.org/content/dam/peru/docs/Publicaciones%20pobreza/INDH2013/pe.Indice%20de%20Densidad%20del%20Estado%20Per%C3%BA.xlsx?download"
destfile <- "datasets.xlsx"
download.file(url, destfile)
fileName="http://www.pe.undp.org/content/dam/peru/docs/Publicaciones%20pobreza/INDH2013/pe.Indice%20de%20Densidad%20del%20Estado%20Per%C3%BA.xlsx"
destfile <- "datasets.xlsx"
download.file(url, destfile)
fileName="http://www.pe.undp.org/content/dam/peru/docs/Publicaciones%20pobreza/INDH2013/pe.Indice%20de%20Densidad%20del%20Estado%20Per%C3%BA.xlsx"
destfile <- "pe.Indice%20de%20Densidad%20del%20Estado%20Per%C3%BA.xlsx"
download.file(url, destfile)
fileName="http://www.pe.undp.org/content/dam/peru/docs/Publicaciones%20pobreza/INDH2013/pe.Indice%20de%20Densidad%20del%20Estado%20Per%C3%BA.xlsx"
destfile <- "datasets.xlsx"
download.file(fileName, destfile)
datasets <- read_excel(destfile)
View(datasets)
head(datasets)
head(datasets)
?download.file
library(readxl)
fileName='idhPeru.xlsx'
fileToRead=file.path(folder,fileName)
dataExcel=read_excel(fileToRead)
head(dataExcel)
fileName="anes_timeseries_2012.dta"
fileToRead=file.path(folder,fileName)
dataStata=read_dta(fileToRead)
dataStataSub=as.data.frame(dataStata)[varsOfInterest]
head(dataStataSub)
require(RCurl)
install.packages("RCurl")
install.packages("jsonlite")
#install.packages("jsonlite")
library(jsonlite)
endPoint="https://data.seattle.gov/resource/pu5n-trf4.json"
data911 = fromJSON(endPoint)
head(data911)
# Install: XML, RCurl
# Activate
library(XML)
install.packages("XML")
# Install: XML, RCurl
# Activate
library(XML)
library(RCurl)
# URL
wiki="https://en.wikipedia.org/wiki/"
link = "List_of_freedom_indices"
# Data
wikiLinkContents = getURL(paste0(wiki,link))
wikiTables = readHTMLTable(wikiLinkContents,
stringsAsFactors=FALSE)
#data frame:
is.data.frame(wikiTables)
#list:
is.list(wikiTables)
# how many?
length(wikiTables)
idx=wikiTables[[3]]
str(idx)
head(idx)
idx=wikiTables[[4]]
str(idx)
head(idx)
idx=wikiTables[[2]]
str(idx)
head(idx)
install.packages("rmarkdown")
install.packages("stringi")
install.packages("sp")
library(sp)
library(sp)
gadm <- readRDS("http://biogeo.ucdavis.edu/data/gadm2.8/rds/PER_adm1.rds")
library(sp)
gadm <- readRDS(gzcon(url("http://biogeo.ucdavis.edu/data/gadm2.8/rds/PER_adm1.rds")))
plot(gadm)
plot(gadm)
head(gadm@data)
gadm@data
?readRDS
library(sp)
load(gzcon(url("http://biogeo.ucdavis.edu/data/gadm2.8/rds/PER_adm1.rds")))
library(sp)
load("http://biogeo.ucdavis.edu/data/gadm2.8/rds/PER_adm1.rds")
plot(gadm,col=gadm@data$ID_1)
library(maptools)
install.packages("maptools")
folderMap='PER_adm_shp'
fileName='PER_adm1.shp'
fileToRead=file.path(folder,folderMap,fileName)
library(maptools)
PeruRegs_shp <- readShapeSpatial(fileToRead)
library(rgeos)
install.packages("rgeos")
folderMap='PER_adm_shp'
fileName='PER_adm1.shp'
fileToRead=file.path(folder,folderMap,fileName)
library(maptools)
library(rgeos)
PeruRegs_shp <- readShapeSpatial(fileToRead)
library(maptools)
map <- readShapeSpatial("maps/worldMap.shp")
names(map)
# empty map
plot(map)
install.packages("rgdal")
library(maptools)
map <- readShapeSpatial("maps/worldMap.shp")
names(map)
folderMap='PER_adm_shp'
fileName='PER_adm1.shp'
fileToRead=file.path(folder,folderMap,fileName)
library(maptools)
library(rgeos)
library(rgdal)
PeruRegs_shp <- readShapeSpatial(fileToRead)
folderMap='PER_adm_shp'
fileName='PER_adm1.shp'
fileToRead=file.path(folder,folderMap,fileName)
library(maptools)
library(rgeos)
library(rgdal)
PeruRegs_shp <- rgdal::readOGR(fileToRead)
plot(PeruRegs_shp)
?readOGR
library(maptools)
map <- readShapeSpatial("maps/worldMap.shp")
names(map)
library(maptools)
map <- readShapeSpatial("maps/worldMap.shp")
gpclibPermit()
names(map)
folderMap='PER_adm_shp'
fileName='PER_adm1.shp'
fileToRead=file.path(folder,folderMap,fileName)
library(maptools) #gpclibPermit()
library(rgeos)
library(rgdal)
PeruRegs_shp <- readOGR(fileToRead)
?readShapePoly
install.packages("sf")
folderMap='PER_adm_shp'
fileName='PER_adm1.shp'
fileToRead=file.path(folder,folderMap,fileName)
library(maptools)
library(rgeos)
PeruRegs_shp=readShapePoly(fileToRead)
plot(PeruRegs_shp,col=PeruRegs_shp@data$ID_1)
library(rgdal)
library(sf)
PeruRegs_shp <- rgdal::readOGR(fileToRead)
plot(PeruRegs_shp,col=PeruRegs_shp@data$ID_1)
plot(PeruRegs_shp,col=gray(PeruRegs_shp@data$ID_1))
plot(PeruRegs_shp,col=PeruRegs_shp@data$ID_1)
library(rgdal)
library(sf)
PeruRegs_shp <- rgdal::readOGR(fileToRead)
plot(PeruRegs_shp,col=PeruRegs_shp@data$ID_1)
library(sp)
PeruRegs <- readRDS(gzcon(url("http://biogeo.ucdavis.edu/data/gadm2.8/rds/PER_adm1.rds")))
