MUNDO_s=scale(MUNDO)
MUNDO_d=dist(MUNDO_s)
MUNDO_r=cmdscale(MUNDO_d,eig=TRUE, k=2)
x=MUNDO_r$points[,1]
y=MUNDO_r$points[,2]
columnForLabels=row.names(MUNDO)
colorForLabels=as.factor(ifelse(MUNDO$polStabNoTerror>0,'si','no'))
paleta=c('red','grey')
plot(x, y, main="Mi Grafico",type='n')
text(x, y,labels = columnForLabels, cex = 0.5,col = paleta[colorForLabels])
#legend("bottomright", legend = levels(colorForLabels),
fill = paleta,title = "terror positivo?")
MUNDO=datat
row.names(MUNDO)=MUNDO$pais
MUNDO=MUNDO[,-c(1,2)]
MUNDO_s=scale(MUNDO)
MUNDO_d=dist(MUNDO_s)
MUNDO_r=cmdscale(MUNDO_d,eig=TRUE, k=2)
x=MUNDO_r$points[,1]
y=MUNDO_r$points[,2]
columnForLabels=row.names(MUNDO)
colorForLabels=as.factor(ifelse(MUNDO$polStabNoTerror>0,'si','no'))
paleta=c('red','grey')
plot(x, y, main="Mi Grafico",type='n')
text(x, y,labels = columnForLabels, cex = 0.5,col = paleta[colorForLabels])
#legend("bottomright", legend = levels(colorForLabels),fill = paleta,title = "terror positivo?")
MUNDO=datat
row.names(MUNDO)=MUNDO$pais
MUNDO=MUNDO[,-c(1,2)]
MUNDO_s=scale(MUNDO)
MUNDO_d=dist(MUNDO_s)
MUNDO_r=cmdscale(MUNDO_d,eig=TRUE, k=2)
x=MUNDO_r$points[,1]
y=MUNDO_r$points[,2]
columnForLabels=row.names(MUNDO)
colorForLabels=as.factor(ifelse(MUNDO$polStabNoTerror>0,'si','no'))
paleta=c('red','grey')
plot(x, y, main="Mi Grafico",type='n')
text(x, y,labels = columnForLabels, cex = 0.5,col = paleta[colorForLabels])
legend("bottomright", legend = levels(colorForLabels),fill = paleta,title = "terror positivo?",cex=0.5)
MUNDO=datat
row.names(MUNDO)=MUNDO$pais
MUNDO=MUNDO[,-c(1,2)]
MUNDO_s=scale(MUNDO)
MUNDO_d=dist(MUNDO_s)
MUNDO_r=cmdscale(MUNDO_d,eig=TRUE, k=2)
x=MUNDO_r$points[,1]
y=MUNDO_r$points[,2]
columnForLabels=row.names(MUNDO)
colorForLabels=as.factor(ifelse(MUNDO$polStabNoTerror>0,'si','no'))
paleta=c('red','green')
plot(x, y, main="Mi Grafico",type='n')
text(x, y,labels = columnForLabels, cex = 0.5,col = paleta[colorForLabels])
legend("bottomright", legend = levels(colorForLabels),fill = paleta,title = "terror positivo?",cex=0.5)
MUNDO=datat
row.names(MUNDO)=MUNDO$pais
MUNDO=MUNDO[,-c(1,2)]
MUNDO_s=scale(MUNDO)
MUNDO_d=dist(MUNDO_s)
MUNDO_r=cmdscale(MUNDO_d,eig=TRUE, k=2)
x=MUNDO_r$points[,1]
y=MUNDO_r$points[,2]
columnForLabels=row.names(MUNDO)
colorForLabels=as.factor(ifelse(MUNDO$polStabNoTerror>0,'si','no'))
paleta=c('red','orange')
plot(x, y, main="Mi Grafico",type='n')
text(x, y,labels = columnForLabels, cex = 0.5,col = paleta[colorForLabels])
legend("bottomright", legend = levels(colorForLabels),fill = paleta,title = "terror positivo?",cex=0.5)
MUNDO=datat
row.names(MUNDO)=MUNDO$pais
MUNDO=MUNDO[,-c(1,2)]
MUNDO_s=scale(MUNDO)
MUNDO_d=dist(MUNDO_s)
MUNDO_r=cmdscale(MUNDO_d,eig=TRUE, k=2)
x=MUNDO_r$points[,1]
y=MUNDO_r$points[,2]
columnForLabels=row.names(MUNDO)
colorForLabels=as.factor(ifelse(MUNDO$polStabNoTerror>0,'si','no'))
paleta=c('red','green')
plot(x, y, main="Mi Grafico",type='n')
text(x, y,labels = columnForLabels, cex = 0.5,col = paleta[colorForLabels])
legend("bottomright", legend = levels(colorForLabels),fill = paleta,title = "terror positivo?",cex=0.5)
subTable=MUNDO[,-c(1,2)]
for(i in 1:ncol(subTable)){  # para cada columna:
MEDIANA=median(subTable[,i], na.rm = TRUE) # calcula la mediana de esa columna
subTable[is.na(subTable[,i]), i] <- round(MEDIANA,0) # pon la mediana donde haya un NA en esa columna (redondeada)
}
View(subTable)
subTable=MUNDO[,-c(1,2)]
for(i in 1:ncol(subTable)){  # para cada columna:
MEDIANA=median(subTable[,i], na.rm = TRUE) # calcula la mediana de esa columna
subTable[is.na(subTable[,i]), i] <- round(MEDIANA,0) # pon la mediana donde haya un NA en esa columna (redondeada)
}
library(psych)
Poly_cor <- polychoric(subTable)$rho
?KMO
corr(subTable)
subTable=MUNDO[,-c(1,2)]
for(i in 1:ncol(subTable)){  # para cada columna:
MEDIANA=median(subTable[,i], na.rm = TRUE) # calcula la mediana de esa columna
subTable[is.na(subTable[,i]), i] <- round(MEDIANA,0) # pon la mediana donde haya un NA en esa columna (redondeada)
}
library(psych)
Poly_cor <- cor(subTable)
cor(subTable)
subTable=MUNDO[,-c(1,2)]
for(i in 1:ncol(subTable)){  # para cada columna:
MEDIANA=median(subTable[,i], na.rm = TRUE) # calcula la mediana de esa columna
subTable[is.na(subTable[,i]), i] <- round(MEDIANA,0) # pon la mediana donde haya un NA en esa columna (redondeada)
}
library(psych)
Poly_cor <- cor(subTable)
KMO(Poly_cor)
cortest.bartlett(Poly_cor, n=nrow(subTable))
resultadoPr=principal(Poly_cor,3,rotate="varimax", scores=T)
print(resultadoPr,digits=3,cut = 0.4)
resultadoPr=principal(Poly_cor,2,rotate="varimax", scores=T)
print(resultadoPr,digits=3,cut = 0.4)
subTable=MUNDO
for(i in 1:ncol(subTable)){  # para cada columna:
MEDIANA=median(subTable[,i], na.rm = TRUE) # calcula la mediana de esa columna
subTable[is.na(subTable[,i]), i] <- round(MEDIANA,0) # pon la mediana donde haya un NA en esa columna (redondeada)
}
library(psych)
Poly_cor <- cor(subTable)
KMO(Poly_cor)
cortest.bartlett(Poly_cor, n=nrow(subTable))
resultadoPr=principal(Poly_cor,2,rotate="varimax", scores=T)
print(resultadoPr,digits=3,cut = 0.4)
datat$noterrO=datat$fuerzaO=datat$corruO=datat$fueraO=datat$ruralO=datat$accO=NA
View(datat)
View(datat)
gruposCantidad=5
###
etiquetas1=c('muybajo','bajo','medio','alto','muy alto')
ide12[,c(9:11)]=lapply(ide12[,c(3:5)],cut,
breaks = gruposCantidad,
labels = etiquetas1,
ordered_result = T)
gruposCantidad=5
###
etiquetas1=c('muybajo','bajo','medio','alto','muy alto')
datat[,c(9:11)]=lapply(datat[,c(3:5)],cut,
breaks = gruposCantidad,
labels = etiquetas1,
ordered_result = T)
###
etiquetas2=c('muy malo','malo','regular','bueno','muy bueno') # usando otra etiqueta
datat[,c(12:14)]=lapply(datat[,c(6:8)],cut,
breaks = gruposCantidad,
labels = etiquetas2,
ordered_result = T)
summary(datat[,c(9:14)])
tablaTE=table(datat$fueraO,datat$noterrO)
tablaTE
gruposCantidad=3
###
etiquetas1=c('bajo','medio','alto')
datat[,c(9:11)]=lapply(datat[,c(3:5)],cut,
breaks = gruposCantidad,
labels = etiquetas1,
ordered_result = T)
###
etiquetas2=c('malo','regular','bueno') # usando otra etiqueta
datat[,c(12:14)]=lapply(datat[,c(6:8)],cut,
breaks = gruposCantidad,
labels = etiquetas2,
ordered_result = T)
summary(datat[,c(9:14)])
tablaTE=table(datat$fueraO,datat$noterrO)
tablaTE
library(ca)
tablaCA_te=ca(tablaTE)
library(ca)
tablaCA_te=ca(tablaTE)
plot.ca(tablaCA_te, col=c("red","blue"))
View(datat)
write.xlsx(datat,'data/mundo.xlsx')
library(openxlsx)
folder2='wb'
datafile='dataMundo.xlsx'
abrir=file.path(folder2,datafile)
data=read.xlsx(abrir)
head(data)
data=data[,(1:4)]
str(data)
datat=reshape(data, idvar=c('codigopais','pais'),
timevar = 'indicador',
direction = 'wide')
datat
summary(datat)
datat=reshape(data, idvar=c('codigopais','pais'),
timevar = 'indicador',
direction = 'wide')
names(datat)=gsub("valor.", "", names(datat))
datat
summary(datat)
library(openxlsx)
folder2='data'
datafile='mundo.xlsx'
abrir=file.path(folder2,datafile)
data=read.xlsx(abrir)
setwd("~/Documents/GITHUBs/PUCP/EstadisticaPoliticaGobiernoII/sesiones")
library(openxlsx)
folder2='data'
datafile='mundo.xlsx'
abrir=file.path(folder2,datafile)
data=read.xlsx(datafile)
head(data)
data=data[,(1:4)]
library(openxlsx)
folder2='data'
datafile='mundo.xlsx'
abrir=file.path(folder2,datafile)
data=read.xlsx(datafile)
head(data)
library(openxlsx)
folder2='data'
datafile='mundo.xlsx'
abrir=file.path(folder2,datafile)
data=read.xlsx(datafile)
head(datat)
str(datat)
library(openxlsx)
folder2='data'
datafile='mundo.xlsx'
abrir=file.path(folder2,datafile)
datat=read.xlsx(datafile)
head(datat)
str(datat)
summary(datat)
library(openxlsx)
datafile='mundo.xlsx'
datat=read.xlsx(datafile)
head(datat)
str(datat)
datat
summary(datat)
test=scale(datat[,-c(1,2)])
library(NbClust)
nb <- NbClust(test, method = "complete")
datasc=as.data.frame(lapply(datat[,-c(1,2)],function(x){replace(x,is.na(x),mean(x,na.rm = T))}))
test2=scale(datasc)
library(NbClust)
nb <- NbClust(test2, method = "complete")
datat
View(datat)
library(openxlsx)
datafile='mundo.xlsx'
MUNDO=read.xlsx(datafile)
row.names(MUNDO)=MUNDO$pais
MUNDO=MUNDO[,-c(1,2)]
MUNDO_s=scale(MUNDO)
MUNDO_d=dist(MUNDO_s)
MUNDO_r=cmdscale(MUNDO_d,eig=TRUE, k=2)
x=MUNDO_r$points[,1]
y=MUNDO_r$points[,2]
columnForLabels=row.names(MUNDO)
colorForLabels=as.factor(ifelse(MUNDO$polStabNoTerror>0,'si','no'))
paleta=c('red','green')
plot(x, y, main="Mi Grafico",type='n')
text(x, y,labels = columnForLabels, cex = 0.5,col = paleta[colorForLabels])
legend("bottomright", legend = levels(colorForLabels),fill = paleta,title = "terror positivo?",cex=0.5)
?cmdscale
library(openxlsx)
datafile='mundo.xlsx'
MUNDO=read.xlsx(datafile)
row.names(MUNDO)=MUNDO$pais
MUNDO=MUNDO[,-c(1,2)]
MUNDO_s=scale(MUNDO)
MUNDO_d=dist(MUNDO_s)
MUNDO_r=cmdscale(MUNDO_d,eig=TRUE, k=2)
x=MUNDO_r$points[,1]
y=MUNDO_r$points[,2]
columnForLabels=row.names(MUNDO)
colorForLabels=as.factor(ifelse(MUNDO$polStabNoTerror>0,'si','no'))
paleta=c('red','green')
plot(x, y, main="Mi Grafico",type='n')
text(x, y,labels = columnForLabels, cex = 0.5,col = paleta[colorForLabels])
legend("bottomright", legend = levels(colorForLabels),fill = paleta,title = "terror positivo?",cex=0.5)
MUNDO
library(openxlsx)
datafile='mundo.xlsx'
MUNDO=read.xlsx(datafile)
subTable=MUNDO
for(i in 1:ncol(subTable)){  # para cada columna:
MEDIANA=median(subTable[,i], na.rm = TRUE) # calcula la mediana de esa columna
subTable[is.na(subTable[,i]), i] <- round(MEDIANA,0) # pon la mediana donde haya un NA en esa columna (redondeada)
}
subTable
library(openxlsx)
datafile='mundo.xlsx'
MUNDO=read.xlsx(datafile)
subTable=MUNDO[,-c(1,2)]
for(i in 1:ncol(subTable)){  # para cada columna:
MEDIANA=median(subTable[,i], na.rm = TRUE) # calcula la mediana de esa columna
subTable[is.na(subTable[,i]), i] <- round(MEDIANA,0) # pon la mediana donde haya un NA en esa columna (redondeada)
}
library(psych)
Poly_cor <- cor(subTable)
KMO(Poly_cor)
cortest.bartlett(Poly_cor, n=nrow(subTable))
resultadoPr=principal(Poly_cor,2,rotate="varimax", scores=T)
print(resultadoPr,digits=3,cut = 0.4)
library(openxlsx)
datafile='mundo.xlsx'
MUNDO=read.xlsx(datafile)
subTable=MUNDO[,-c(1,2)]
for(i in 1:ncol(subTable)){  # para cada columna:
MEDIANA=median(subTable[,i], na.rm = TRUE) # calcula la mediana de esa columna
subTable[is.na(subTable[,i]), i] <- round(MEDIANA,0) # pon la mediana donde haya un NA en esa columna (redondeada)
}
library(psych)
Poly_cor <- cor(subTable)
KMO(Poly_cor)
library(openxlsx)
datafile='mundo.xlsx'
MUNDO=read.xlsx(datafile)
subTable=MUNDO[,-c(1,2)]
for(i in 1:ncol(subTable)){  # para cada columna:
MEDIANA=mean(subTable[,i], na.rm = TRUE) # calcula la mediana de esa columna
subTable[is.na(subTable[,i]), i] <- round(MEDIANA,0) # pon la mediana donde haya un NA en esa columna (redondeada)
}
library(psych)
Poly_cor <- cor(subTable)
KMO(Poly_cor)
library(openxlsx)
datafile='mundo.xlsx'
MUNDO=read.xlsx(datafile)
subTable=MUNDO[,-c(1,2)]
for(i in 1:ncol(subTable)){  # para cada columna:
MEDIANA=median(subTable[,i], na.rm = TRUE) # calcula la mediana de esa columna
subTable[is.na(subTable[,i]), i] <- round(MEDIANA,0) # pon la mediana donde haya un NA en esa columna (redondeada)
}
library(psych)
Poly_cor <- cor(subTable)
KMO(Poly_cor)
library(openxlsx)
datafile='mundo.xlsx'
MUNDO=read.xlsx(datafile)
subTable=MUNDO[,-c(1,2)]
# for(i in 1:ncol(subTable)){  # para cada columna:
#   MEDIANA=median(subTable[,i], na.rm = TRUE) # calcula la mediana de esa columna
#   subTable[is.na(subTable[,i]), i] <- round(MEDIANA,0) # pon la mediana donde haya un NA en esa columna (redondeada)
# }
library(psych)
Poly_cor <- cor(subTable)
KMO(Poly_cor)
library(openxlsx)
datafile='mundo.xlsx'
MUNDO=read.xlsx(datafile)
subTable=MUNDO[,-c(1,2)]
for(i in 1:ncol(subTable)){  # para cada columna:
MEDIANA=median(subTable[,i], na.rm = TRUE) # calcula la mediana de esa columna
subTable[is.na(subTable[,i]), i] <- round(MEDIANA,0) # pon la mediana donde haya un NA en esa columna (redondeada)
}
library(psych)
Poly_cor <- cor(subTable)
KMO(Poly_cor)
library(openxlsx)
datafile='mundo.xlsx'
MUNDO=read.xlsx(datafile)
subTable=MUNDO[,-c(1,2)]
for(i in 1:ncol(subTable)){  # para cada columna:
MEDIANA=median(subTable[,i], na.rm = TRUE) # calcula la mediana de esa columna
subTable[is.na(subTable[,i]), i] <- round(MEDIANA,0) # pon la mediana donde haya un NA en esa columna (redondeada)
}
library(psych)
Poly_cor <- cor(subTable)
KMO(Poly_cor)
cortest.bartlett(Poly_cor, n=nrow(subTable))
chisq.test(tablaCA_te)
chisq.test(tablaTE)
chisq.test(tablaTE, simulate.p.value = T)
chisq.test(tablaTE, simulate.p.value = T)
chisq.test(tablaTE, simulate.p.value = T)
chisq.test(tablaTE, simulate.p.value = T)
library(openxlsx)
datafile='mundo.xlsx'
datat=read.xlsx(datafile)
etiquetas1=c('bajo','medio','alto')
datat$mujFueraEscuelaO=cut(datat$mujFueraEscuelaO,
breaks=3,
labels=etiquetas1,
ordered_result = T)
library(openxlsx)
datafile='mundo.xlsx'
datat=read.xlsx(datafile)
etiquetas1=c('bajo','medio','alto')
datat$mujFueraEscuelaO=cut(datat$mujFueraEscuela,
breaks=3,
labels=etiquetas1,
ordered_result = T)
etiquetas2=c('malo','regular','bueno')
datat$polStabNoTerrorO =cut(datat$polStabNoTerror,
breaks=3,
labels=etiquetas2,
ordered_result = T)
summary(datat)
library(openxlsx)
datafile='mundo.xlsx'
datat=read.xlsx(datafile)
etiquetas1=c('bajo','medio','alto')
datat$mujerFuerzaLO=cut(datat$mujerFuerzaL,
breaks=3,
labels=etiquetas1,
ordered_result = T)
etiquetas2=c('malo','regular','bueno')
datat$polStabNoTerrorO =cut(datat$polStabNoTerror,
breaks=3,
labels=etiquetas2,
ordered_result = T)
summary(datat)
tablaTE=table(datat$mujerFuerzaLO,datat$polStabNoTerrorO)
tablaTE
chisq.test(tablaTE)
chisq.test(tablaTE)
chisq.test(tablaTE,simulate.p.value = T)
chisq.test(tablaTE,simulate.p.value = T)
chisq.test(tablaTE,simulate.p.value = T)
chisq.test(tablaTE,simulate.p.value = T)
library(ca)
tablaCA_te=ca(tablaTE)
plot.ca(tablaCA_te, col=c("red","blue"))
tablaTE=table(datat$polStabNoTerrorO,datat$mujerFuerzaLO)
chisq.test(tablaTE,simulate.p.value = T)
library(ca)
tablaCA_te=ca(tablaTE)
plot.ca(tablaCA_te, col=c("red","blue"))
tablaTE=table(datat$mujerFuerzaLO,datat$polStabNoTerrorO)
chisq.test(tablaTE,simulate.p.value = T)
library(ca)
tablaCA_te=ca(tablaTE)
plot.ca(tablaCA_te, col=c("red","blue"))
library(haven)
fileToRead="https://github.com/PoliticayGobiernoPUCP/EstadisticaPoliticaGobiernoII/raw/master/sesiones/data/PeruLAPOP2014.sav"
dataSpss=read_sav(fileToRead)
set1=c(56:73)
set2=which(names(dataSpss)%in%labelsCol1)
set1=c(56:73)
set2=which(names(dataSpss)%in%labelsCol1)
labelsCol1=c('n9','n11','n15')
labelsCol2=c('pr3a','pr3b','pr3c','pr4')
set1=c(56:73)
set2=which(names(dataSpss)%in%labelsCol1)
set3=which(names(dataSpss)%in%labelsCol2)
#
columnasQueNecesito=c(set1,set2 ,set3)
sub_dataSpss=dataSpss[,columnasQueNecesito]
# ver:
head(sub_dataSpss)
# cual es la columna?
bye=which(names(sub_dataSpss)%in%'b33')
sub_dataSpss=sub_dataSpss[,-bye]
# ver:
head(sub_dataSpss)
# cual es la columna?
bye=which(names(sub_dataSpss)%in%'b33')
sub_dataSpss=sub_dataSpss[,-bye]
subTable=data.frame(sub_dataSpss)
# ver:
head(sub_dataSpss)
head(sub_dataSpss)
View(sub_dataSpss)
labelsCol1=c('n9','n11','n15')
labelsCol2=c('pr3a','pr3b','pr3c','pr4')
set1=c(56:73)
set2=which(names(dataSpss)%in%labelsCol1)
set3=which(names(dataSpss)%in%labelsCol2)
#
columnasQueNecesito=c(set1,set2 ,set3)
sub_dataSpss=dataSpss[,columnasQueNecesito]
# cual es la columna?
bye=which(names(sub_dataSpss)%in%'b33')
sub_dataSpss=sub_dataSpss[,-bye]
subTable=data.frame(sub_dataSpss)
# ver:
head(sub_dataSpss)
write_sav(sub_dataSpss,'subLapop.sav')
library(haven)
fileToRead="https://github.com/PoliticayGobiernoPUCP/EstadisticaPoliticaGobiernoII/raw/master/subLapop.sav"
dataSpss=read_sav(fileToRead)
head(sub_dataSpss)
str(sub_dataSpss)
sub_dataSpss=as.data.frame(sub_dataSpss)
str(sub_dataSpss)
sub_dataSpss=as.data.frame(sub_dataSpss)
summary(sub_dataSpss)
for(i in 1:ncol(lapop)){
MEDIANA=median(lapop[,i], na.rm = TRUE)
lapop[is.na(lapop[,i]), i] <- round(MEDIANA,0)
}
library(haven)
fileToRead="https://github.com/PoliticayGobiernoPUCP/EstadisticaPoliticaGobiernoII/raw/master/subLapop.sav"
lapop=read_sav(fileToRead)
lapop=as.data.frame(lapop)
summary(lapop)
for(i in 1:ncol(lapop)){
MEDIANA=median(lapop[,i], na.rm = TRUE)
lapop[is.na(lapop[,i]), i] <- round(MEDIANA,0)
}
lapopS=scale(lapop)
library(NbClust)
nb <- NbClust(lapopS, method = "complete")
View(lapop)
lapopS=scale(lapop)
library(NbClust)
nb <- NbClust(lapopS, method = "complete")
sublapop=lapop[,c(21:24)]
sublapopS=scale(sublapop)
library(NbClust)
nb <- NbClust(sublapopS, method = "complete")
